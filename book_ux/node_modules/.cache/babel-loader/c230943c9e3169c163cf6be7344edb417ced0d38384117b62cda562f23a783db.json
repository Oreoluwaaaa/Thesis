{"ast":null,"code":"var _jsxFileName = \"/Users/oreoluwaala/Documents/Book Recommendation Project/book_ux/src/components/Recommendations.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useFormContext from \"../hooks/useFormContext\";\nimport { fetchRecommendationsByGenre, fetchRecommendationsByDescription } from \"../api\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_BOOKS_API_URL = GOOGLE_BOOKS_API_URL = \"https://www.googleapis.com/books/v1/volumes\";\nconst API_KEY = 'AIzaSyCr2YD6JGrjgQKBKN3Lf8LktV7DoC2oogE';\nconst Recommendations = () => {\n  _s();\n  const {\n    data\n  } = useFormContext();\n  const history = useHistory();\n  const [recommendedBooks, setRecommendedBooks] = useState([]);\n  const [booksWithCovers, setBooksWithCovers] = useState([]);\n  const handleNext = () => {\n    history.push(\"/final-recommendations\");\n  };\n  const fetchBookCover = async isbn13 => {\n    try {\n      const response = await axios.get(`${GOOGLE_BOOKS_API_URL}?q=isbn:${isbn13}&key=${API_KEY}`);\n      if (response.data.items && response.data.items.length > 0) {\n        return response.data.items[0].volumeInfo.imageLinks.thumbnail; // Return the cover URL\n      }\n    } catch (error) {\n      console.error('Error fetching book cover', error);\n    }\n    return null; // Return null if no cover is found\n  };\n  useEffect(() => {\n    const userGenre = data.genreInputData;\n    const userDesc = data.descInputData;\n    if (userDesc !== \"\") {\n      console.log(userDesc);\n      fetchRecommendationsByDescription(userDesc).then(recommendations => setRecommendedBooks(recommendations)).catch(err => console.error(\"Error fetching recommendations by description\", err));\n    } else {\n      fetchRecommendationsByGenre(userGenre).then(recommendations => setRecommendedBooks(recommendations)).catch(err => console.error(\"Error fetching recommendations by genre\", err));\n    }\n  }, [data]);\n  console.log(recommendedBooks);\n  useEffect(() => {\n    if (recommendedBooks.length > 0) {\n      const fetchCoversForBooks = async () => {\n        const updatedBooks = await Promise.all(recommendedBooks.map(async book => {\n          const coverUrl = await fetchBookCover(book.isbn13);\n          return {\n            ...book,\n            cover_url: coverUrl\n          }; // Add cover_url to each book\n        }));\n        setBooksWithCovers(updatedBooks); // Update state with books and their covers\n      };\n      fetchCoversForBooks(); // Call the function to fetch book covers\n    }\n  }, [recommendedBooks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendations\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [data.fname ? data.fname : 'Guest', \", here are your first set of recommendations\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recommendedBooks.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: book.title\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"genre-button\",\n      type: \"button\",\n      onClick: handleNext,\n      children: \"GET RECS!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(Recommendations, \"/i1TsGp9FiNoQTlmgt+1/b2pd0Y=\", false, function () {\n  return [useFormContext, useHistory];\n});\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["useEffect","useState","useHistory","useFormContext","fetchRecommendationsByGenre","fetchRecommendationsByDescription","axios","jsxDEV","_jsxDEV","GOOGLE_BOOKS_API_URL","API_KEY","Recommendations","_s","data","history","recommendedBooks","setRecommendedBooks","booksWithCovers","setBooksWithCovers","handleNext","push","fetchBookCover","isbn13","response","get","items","length","volumeInfo","imageLinks","thumbnail","error","console","userGenre","genreInputData","userDesc","descInputData","log","then","recommendations","catch","err","fetchCoversForBooks","updatedBooks","Promise","all","map","book","coverUrl","cover_url","className","children","fname","fileName","_jsxFileName","lineNumber","columnNumber","title","id","type","onClick","_c","$RefreshReg$"],"sources":["/Users/oreoluwaala/Documents/Book Recommendation Project/book_ux/src/components/Recommendations.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useFormContext from \"../hooks/useFormContext\";\nimport { fetchRecommendationsByGenre, fetchRecommendationsByDescription } from \"../api\";  \nimport axios from \"axios\";\n\nconst GOOGLE_BOOKS_API_URL = GOOGLE_BOOKS_API_URL = \"https://www.googleapis.com/books/v1/volumes\";\nconst API_KEY = 'AIzaSyCr2YD6JGrjgQKBKN3Lf8LktV7DoC2oogE';\n\n\nconst Recommendations = () => {\n    const {data} = useFormContext();\n    const history = useHistory();\n    const [recommendedBooks, setRecommendedBooks] = useState([]);\n    const [booksWithCovers, setBooksWithCovers] = useState([]);\n\n    const handleNext = () => {\n        history.push(\"/final-recommendations\");  \n    };\n\n\n    const fetchBookCover = async (isbn13) => {\n        try {\n            const response = await axios.get(`${GOOGLE_BOOKS_API_URL}?q=isbn:${isbn13}&key=${API_KEY}`);\n            if (response.data.items && response.data.items.length > 0) {\n                return response.data.items[0].volumeInfo.imageLinks.thumbnail;  // Return the cover URL\n            }\n        } catch (error) {\n            console.error('Error fetching book cover', error);\n        }\n        return null;  // Return null if no cover is found\n    };\n\n    useEffect(() => {\n        const userGenre = data.genreInputData; \n        const userDesc = data.descInputData;\n        \n        if(userDesc !== \"\"){\n            console.log(userDesc)\n            fetchRecommendationsByDescription(userDesc)\n                .then(recommendations => setRecommendedBooks(recommendations))\n                .catch(err => console.error(\"Error fetching recommendations by description\", err));\n        }\n        else{\n            fetchRecommendationsByGenre(userGenre)\n                .then(recommendations => setRecommendedBooks(recommendations))\n                .catch(err => console.error(\"Error fetching recommendations by genre\", err));\n        \n        }\n    }, [data]);\n    console.log(recommendedBooks)\n\n    useEffect(() => {\n        if (recommendedBooks.length > 0) {\n            const fetchCoversForBooks = async () => {\n                const updatedBooks = await Promise.all(recommendedBooks.map(async (book) => {\n                    const coverUrl = await fetchBookCover(book.isbn13);\n                    return { ...book, cover_url: coverUrl };  // Add cover_url to each book\n                }));\n                setBooksWithCovers(updatedBooks);  // Update state with books and their covers\n            };\n\n            fetchCoversForBooks();  // Call the function to fetch book covers\n        }\n    }, [recommendedBooks]);\n    \n    return (\n        <div className=\"recommendations\">\n            <h1>{data.fname ? data.fname : 'Guest'}, here are your first set of recommendations</h1>\n            <ul>\n                {recommendedBooks.map(book => (\n                    <li key={book.id}>{book.title}</li>  \n                ))}\n            </ul>\n            <button id=\"genre-button\" type=\"button\" onClick={handleNext}>GET RECS!</button> \n        </div>\n    );\n};\n\nexport default Recommendations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}