{"ast":null,"code":"var _jsxFileName = \"/Users/oreoluwaala/Documents/Book Recommendation Project/book_ux/src/components/Recommendations.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useFormContext from \"../hooks/useFormContext\";\nimport { fetchRecommendationsByGenre, fetchRecommendationsByDescription } from \"../api\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_BOOKS_API_URL = GOOGLE_BOOKS_API_URL = \"https://www.googleapis.com/books/v1/volumes\";\nconst API_KEY = 'AIzaSyCr2YD6JGrjgQKBKN3Lf8LktV7DoC2oogE';\nconst Recommendations = () => {\n  _s();\n  const {\n    data\n  } = useFormContext();\n  const history = useHistory();\n  const [recommendedBooks, setRecommendedBooks] = useState([]);\n  const [booksWithCovers, setBooksWithCovers] = useState([]);\n  const handleNext = () => {\n    history.push(\"/final-recommendations\");\n  };\n  useEffect(() => {\n    const userGenre = data.genreInputData;\n    const userDesc = data.descInputData;\n    if (userDesc !== \"\") {\n      console.log(userDesc);\n      fetchRecommendationsByDescription(userDesc).then(recommendations => setRecommendedBooks(recommendations)).catch(err => console.error(\"Error fetching recommendations by description\", err));\n    } else {\n      fetchRecommendationsByGenre(userGenre).then(recommendations => setRecommendedBooks(recommendations)).catch(err => console.error(\"Error fetching recommendations by genre\", err));\n    }\n  }, [data]);\n  console.log(recommendedBooks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendations\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [data.fname ? data.fname : 'Guest', \", here are your first set of recommendations\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recommendedBooks.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: book.title\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"genre-button\",\n      type: \"button\",\n      onClick: handleNext,\n      children: \"GET RECS!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Recommendations, \"9Tyd8xZcSMLV1kiJFnbN0io6Abs=\", false, function () {\n  return [useFormContext, useHistory];\n});\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["useEffect","useState","useHistory","useFormContext","fetchRecommendationsByGenre","fetchRecommendationsByDescription","axios","jsxDEV","_jsxDEV","GOOGLE_BOOKS_API_URL","API_KEY","Recommendations","_s","data","history","recommendedBooks","setRecommendedBooks","booksWithCovers","setBooksWithCovers","handleNext","push","userGenre","genreInputData","userDesc","descInputData","console","log","then","recommendations","catch","err","error","className","children","fname","fileName","_jsxFileName","lineNumber","columnNumber","map","book","title","id","type","onClick","_c","$RefreshReg$"],"sources":["/Users/oreoluwaala/Documents/Book Recommendation Project/book_ux/src/components/Recommendations.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useFormContext from \"../hooks/useFormContext\";\nimport { fetchRecommendationsByGenre, fetchRecommendationsByDescription } from \"../api\";  \nimport axios from \"axios\";\n\nconst GOOGLE_BOOKS_API_URL = GOOGLE_BOOKS_API_URL = \"https://www.googleapis.com/books/v1/volumes\";\nconst API_KEY = 'AIzaSyCr2YD6JGrjgQKBKN3Lf8LktV7DoC2oogE';\n\n\nconst Recommendations = () => {\n    const {data} = useFormContext();\n    const history = useHistory();\n    const [recommendedBooks, setRecommendedBooks] = useState([]);\n    const [booksWithCovers, setBooksWithCovers] = useState([]);\n\n    const handleNext = () => {\n        history.push(\"/final-recommendations\");  \n    };\n\n    useEffect(() => {\n        const userGenre = data.genreInputData; \n        const userDesc = data.descInputData;\n        \n        if(userDesc !== \"\"){\n            console.log(userDesc)\n            fetchRecommendationsByDescription(userDesc)\n                .then(recommendations => setRecommendedBooks(recommendations))\n                .catch(err => console.error(\"Error fetching recommendations by description\", err));\n        }\n        else{\n            fetchRecommendationsByGenre(userGenre)\n                .then(recommendations => setRecommendedBooks(recommendations))\n                .catch(err => console.error(\"Error fetching recommendations by genre\", err));\n        \n        }\n    }, [data]);\n    console.log(recommendedBooks)\n    return (\n        <div className=\"recommendations\">\n            <h1>{data.fname ? data.fname : 'Guest'}, here are your first set of recommendations</h1>\n            <ul>\n                {recommendedBooks.map(book => (\n                    <li key={book.id}>{book.title}</li>  \n                ))}\n            </ul>\n            <button id=\"genre-button\" type=\"button\" onClick={handleNext}>GET RECS!</button> \n        </div>\n    );\n};\n\nexport default Recommendations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}