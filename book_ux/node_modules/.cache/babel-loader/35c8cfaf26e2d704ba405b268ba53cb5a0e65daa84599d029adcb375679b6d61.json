{"ast":null,"code":"var _jsxFileName = \"/Users/oreoluwaala/Documents/Book Recommendation Project/book_ux/src/components/Recommendations.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useFormContext from \"../hooks/useFormContext\";\nimport { fetchRecommendationsByGenre, fetchRecommendationsByDescription } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const {\n    data\n  } = useFormContext();\n  const history = useHistory();\n  const [recommendedBooks, setRecommendedBooks] = useState([]);\n  const [selectedBooks, setSelectedBooks] = useState([]);\n  const handleNext = () => {\n    history.push(\"/final-recommendations\");\n  };\n  const handleSelectChange = event => {\n    const selectedOptions = Array.from(event.target.selectedOptions); // Get selected options\n    const selectedTitles = selectedOptions.map(option => option.value); // Extract titles\n    setSelectedBooks(selectedTitles); // Update state with selected titles\n  };\n  useEffect(() => {\n    const userGenre = data.genreInputData;\n    const userDesc = data.descInputData;\n    if (userDesc !== \"\") {\n      console.log(userDesc);\n      fetchRecommendationsByDescription(userDesc).then(recommendations => setRecommendedBooks(recommendations)).catch(err => console.error(\"Error fetching recommendations by description\", err));\n    } else {\n      fetchRecommendationsByGenre(userGenre).then(recommendations => setRecommendedBooks(recommendations)).catch(err => console.error(\"Error fetching recommendations by genre\", err));\n    }\n  }, [data]);\n  console.log(recommendedBooks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommendations\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [data.fname ? data.fname : 'Guest', \", here are your first set of recommendations\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-grid\",\n      children: recommendedBooks.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.image || 'default-cover.jpg',\n          alt: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", book.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ISBN13: \", book.isbn13]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, book.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"genre-button\",\n      type: \"button\",\n      onClick: handleNext,\n      children: \"GET RECS!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Recommendations, \"MUEqByzPpFjIVkH/p3Doukg3VNI=\", false, function () {\n  return [useFormContext, useHistory];\n});\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["useEffect","useState","useHistory","useFormContext","fetchRecommendationsByGenre","fetchRecommendationsByDescription","jsxDEV","_jsxDEV","Recommendations","_s","data","history","recommendedBooks","setRecommendedBooks","selectedBooks","setSelectedBooks","handleNext","push","handleSelectChange","event","selectedOptions","Array","from","target","selectedTitles","map","option","value","userGenre","genreInputData","userDesc","descInputData","console","log","then","recommendations","catch","err","error","className","children","fname","fileName","_jsxFileName","lineNumber","columnNumber","book","src","image","alt","title","rating","isbn13","index","id","type","onClick","_c","$RefreshReg$"],"sources":["/Users/oreoluwaala/Documents/Book Recommendation Project/book_ux/src/components/Recommendations.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useFormContext from \"../hooks/useFormContext\";\nimport { fetchRecommendationsByGenre, fetchRecommendationsByDescription } from \"../api\";  \n\nconst Recommendations = () => {\n    const {data} = useFormContext();\n    const history = useHistory();\n    const [recommendedBooks, setRecommendedBooks] = useState([]);\n    const [selectedBooks, setSelectedBooks] = useState([]);\n\n    const handleNext = () => {\n        history.push(\"/final-recommendations\");  \n    };\n\n    const handleSelectChange = (event) => {\n        const selectedOptions = Array.from(event.target.selectedOptions); // Get selected options\n        const selectedTitles = selectedOptions.map(option => option.value); // Extract titles\n        setSelectedBooks(selectedTitles); // Update state with selected titles\n    };\n\n    useEffect(() => {\n        const userGenre = data.genreInputData; \n        const userDesc = data.descInputData;\n        \n        if(userDesc !== \"\"){\n            console.log(userDesc)\n            fetchRecommendationsByDescription(userDesc)\n                .then(recommendations => setRecommendedBooks(recommendations))\n                .catch(err => console.error(\"Error fetching recommendations by description\", err));\n        }\n        else{\n            fetchRecommendationsByGenre(userGenre)\n                .then(recommendations => setRecommendedBooks(recommendations))\n                .catch(err => console.error(\"Error fetching recommendations by genre\", err));\n        \n        }\n    }, [data]);\n    console.log(recommendedBooks)\n    return (\n        <div className=\"recommendations\">\n            <h1>{data.fname ? data.fname : 'Guest'}, here are your first set of recommendations</h1>\n\n\n            \n            <div className=\"book-grid\">\n            {recommendedBooks.map(book => (\n                <div key={book.index} className=\"book-item\">\n                    <img src={book.image || 'default-cover.jpg'} alt={book.title} />  \n                    <h3>{book.title}</h3>\n                    <p>Rating: {book.rating}</p>\n                    <p>ISBN13: {book.isbn13}</p>\n                </div>\n            ))}\n            </div>  \n            <button id=\"genre-button\" type=\"button\" onClick={handleNext}>GET RECS!</button> \n        </div>\n    );\n};\n\nexport default Recommendations;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}