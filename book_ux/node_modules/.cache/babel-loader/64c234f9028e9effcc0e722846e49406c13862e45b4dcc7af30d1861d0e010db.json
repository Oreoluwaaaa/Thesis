{"ast":null,"code":"var _jsxFileName = \"/Users/oreoluwaala/Documents/Book Recommendation Project/book_ux/src/components/Genres.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useFormContext from \"../hooks/useFormContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Genres = () => {\n  _s();\n  const genres = ['', 'art', 'biography', 'books', 'business', 'chick-lit', 'christian', 'classics', 'comics', 'contemporary', 'cookbooks', 'crime', 'fantasy', 'fiction', 'gay-and-lesbian', 'graphic-novels', 'historical-fiction', 'history', 'horror', 'humor-and-comedy', 'manga', 'memoir', 'music', 'mystery', 'nonfiction', 'paranormal', 'philosophy', 'poetry', 'psychology', 'religion', 'romance', 'science', 'science-fiction', 'self-help', 'spirituality', 'sports', 'suspense', 'thriller', 'travel', 'young-adult'];\n  const {\n    data,\n    handleChange\n  } = useFormContext();\n  const BookInputData = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login--form choose-genres\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select your Favorite Genres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"note\",\n      children: \"Note: they should be in order of preferrence with the first choice being your top reference\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `genre${index + 1}`,\n          children: \"Choose a genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: `genre${index + 1}`,\n          name: `genre${index + 1}`,\n          value: BookInputData[`genre${index + 1}`],\n          onChange: handleChange,\n          children: genres.map((element, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: element,\n            children: element\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Genres, \"ju3Q2cqgGwq/QmGM9LpqHMHLxqQ=\", false, function () {\n  return [useFormContext];\n});\n_c = Genres;\nexport default Genres;\nvar _c;\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["useState","useFormContext","jsxDEV","_jsxDEV","Genres","_s","genres","data","handleChange","BookInputData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","Array","map","_","index","htmlFor","name","value","onChange","element","i","_c","$RefreshReg$"],"sources":["/Users/oreoluwaala/Documents/Book Recommendation Project/book_ux/src/components/Genres.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport useFormContext from \"../hooks/useFormContext\";\r\nconst Genres = () => {\r\n    const genres = [\r\n        '', 'art', 'biography', 'books', 'business', 'chick-lit', 'christian', 'classics',\r\n        'comics', 'contemporary', 'cookbooks', 'crime', 'fantasy', 'fiction',\r\n        'gay-and-lesbian', 'graphic-novels', 'historical-fiction', 'history',\r\n        'horror', 'humor-and-comedy', 'manga', 'memoir', 'music', 'mystery',\r\n        'nonfiction', 'paranormal', 'philosophy', 'poetry', 'psychology', 'religion',\r\n        'romance', 'science', 'science-fiction', 'self-help', 'spirituality', 'sports',\r\n        'suspense', 'thriller', 'travel', 'young-adult'\r\n      ];\r\n\r\n    const { data, handleChange } = useFormContext();\r\n    const BookInputData = data;\r\n\r\n    return (\r\n        <div className=\"login--form choose-genres\">\r\n            <h2>Select your Favorite Genres</h2>\r\n            <p id=\"note\" >Note: they should be in order of preferrence with the first choice being your top reference</p>\r\n            <form>\r\n                {[...Array(5)].map((_, index) => (\r\n                    <div key={index}>\r\n                        <label htmlFor={`genre${index + 1}`}>Choose a genre:</label>\r\n                        <select\r\n                            id={`genre${index + 1}`}\r\n                            name={`genre${index + 1}`}\r\n                            value={BookInputData[`genre${index + 1}`]}\r\n                            onChange={handleChange}\r\n                        >\r\n                            {genres.map((element, i) => (\r\n                                <option key={i} value={element}>{element}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                ))}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Genres;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,MAAM,GAAG,CACX,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,UAAU,EACjF,QAAQ,EAAE,cAAc,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EACpE,iBAAiB,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,SAAS,EACpE,QAAQ,EAAE,kBAAkB,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EACnE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,EAC5E,SAAS,EAAE,SAAS,EAAE,iBAAiB,EAAE,WAAW,EAAE,cAAc,EAAE,QAAQ,EAC9E,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,CAChD;EAEH,MAAM;IAAEC,IAAI;IAAEC;EAAa,CAAC,GAAGP,cAAc,CAAC,CAAC;EAC/C,MAAMQ,aAAa,GAAGF,IAAI;EAE1B,oBACIJ,OAAA;IAAKO,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACtCR,OAAA;MAAAQ,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCZ,OAAA;MAAGa,EAAE,EAAC,MAAM;MAAAL,QAAA,EAAE;IAA2F;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7GZ,OAAA;MAAAQ,QAAA,EACK,CAAC,GAAGM,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACxBjB,OAAA;QAAAQ,QAAA,gBACIR,OAAA;UAAOkB,OAAO,EAAG,QAAOD,KAAK,GAAG,CAAE,EAAE;UAAAT,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5DZ,OAAA;UACIa,EAAE,EAAG,QAAOI,KAAK,GAAG,CAAE,EAAE;UACxBE,IAAI,EAAG,QAAOF,KAAK,GAAG,CAAE,EAAE;UAC1BG,KAAK,EAAEd,aAAa,CAAE,QAAOW,KAAK,GAAG,CAAE,EAAC,CAAE;UAC1CI,QAAQ,EAAEhB,YAAa;UAAAG,QAAA,EAEtBL,MAAM,CAACY,GAAG,CAAC,CAACO,OAAO,EAAEC,CAAC,kBACnBvB,OAAA;YAAgBoB,KAAK,EAAEE,OAAQ;YAAAd,QAAA,EAAEc;UAAO,GAA3BC,CAAC;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAmC,CACpD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GAXHK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAV,EAAA,CArCKD,MAAM;EAAA,QAWuBH,cAAc;AAAA;AAAA0B,EAAA,GAX3CvB,MAAM;AAuCZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}